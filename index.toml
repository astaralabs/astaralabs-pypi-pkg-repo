mtime = 1688986243
[[pkgs]]
type = "github"
distrib = "territory-feats"
package = "territory_feats-0.2.0-py3-none-any"
ext = "whl"
sha256 = "aa1d27c78bce1feb2020d9cf7f22969e9d4c3c65d64d01b678336f71d4285c07"
url = "https://api.github.com/repos/astaralabs/astaralabs-pypi-pkg-repo/releases/assets/116340251"

[pkgs.meta]
name = "territory-feats"
version = "0.2.0"
filetype = "bdist_wheel"
pyversion = "py3"
metadata_version = "2.1"
summary = ""
home_page = ""
author = "astara labs"
author_email = "dev@astaralabs.com"
maintainer = ""
maintainer_email = ""
license = ""
description = "# territory_feats\n\nA library to compute weather and land features for territories.\n\n## Dependencies\n\nYou will need to have Poetry [installed](https://python-poetry.org/docs/#installation).\n\nThen, to install all the dependencies, run `poetry install`.\n\n## Testing, linting, formatting...\n\nRun the tests with `poetry run pytest`.\n\nFor running the linter with autofixing: `poetry run ruff .`. (Ruff configuration is located in [pyproject.toml](pyproject.toml)).\n\nBlack can be used to format the files with `poetry run black .` (Black configuration is located in [pyproject.toml](pyproject.toml)).\n\n## Releases\n\nAs of today, GitHub Package Repository does not support Python packages. For that reason, we have created a [private PyPi repository](https://github.com/astaralabs/astaralabs-pypi-pkg-repo) on top of GitHub Pages using [this tool](https://github.com/pywharf/pywharf).\n\nThe index of the private PyPi is located [here](https://astaralabs.github.io/astaralabs-pypi-pkg-repo/).\n\nTo publish a package in that repository you will need a GitHub [PAT](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens) as credentials.\n\nFirst you have to start the [Pywharf](https://github.com/pywharf/pywharf) server:\n\n```bash\ndocker run --rm -v ./pywharf-root:/pywharf-root -p 8888:8888 pywharf/pywharf:0.2.3 server\ncurl -d $'config=[astaralabs-pypi-pkg-repo]\\ntype = \"github\"\\nowner = \"astaralabs\"\\nrepo = \"astaralabs-pypi-pkg-repo\"\\nbranch = \"main\"&admin_secret=[astaralabs-pypi-pkg-repo]\\ntype = \"github\"\\nraw = \"<YOUR-GITHUB-PAT>\"' -X POST http://localhost:8888/initialize/\n```\n\n```bash\n# config Poetry to use our own PyPi\npoetry config repositories.astaralabs-pypi http://localhost:8888/simple/\n\n# publish the package (this assumes you already built the package with `poetry build -f wheel`)\npoetry publish --repository astaralabs-pypi --username astaralabs-pypi-pkg-repo --password <YOUR-GITHUB-PAT> --skip-existing\n\n```\n\nAnd, to install the package in another Python project:\n\n```bash\n# set our PyPi repository as a source in Poetry\npoetry source add --secondary astaralabs-pypi https://astaralabs.github.io/astaralabs-pypi-pkg-repo/\n\n## If using poetry 1.5 or above\n# poetry source add --priority=explicit astaralabs-pypi https://astaralabs.github.io/astaralabs-pypi-pkg-repo/\n\npoetry add --source=astaralabs-pypi territory_feats\n```\n"
keywords = ""
classifiers = "Programming Language :: Python :: 3"
download_url = ""
comment = ""
md5_digest = "4cddcc98df418945194a1ebc50396ec8"
sha256_digest = "aa1d27c78bce1feb2020d9cf7f22969e9d4c3c65d64d01b678336f71d4285c07"
blake2_256_digest = "17240cb046b5de1327922e4d34d6415b72d124b7b434972f7da6a837b95b2a93"
requires_dist = "shapely (>=2.0.1,<3.0.0)"
requires_python = ">=3.10,<3.13"
description_content_type = "text/markdown"
":action" = "file_upload"
protocol_version = "1"
distrib = "territory-feats"
sha256 = "aa1d27c78bce1feb2020d9cf7f22969e9d4c3c65d64d01b678336f71d4285c07"
[[pkgs]]
type = "github"
distrib = "territory-feats"
package = "territory_feats-0.1.1-py3-none-any"
ext = "whl"
sha256 = "b0076502734429b50f37d907127d05cd39f37c7fd14b3645cc6bf8776160ed7b"
url = "https://api.github.com/repos/astaralabs/astaralabs-pypi-pkg-repo/releases/assets/115963782"

[pkgs.meta]
name = "territory-feats"
version = "0.1.1"
filetype = "bdist_wheel"
pyversion = "py3"
metadata_version = "2.1"
summary = ""
home_page = ""
author = "astara labs"
author_email = "dev@astaralabs.com"
maintainer = ""
maintainer_email = ""
license = ""
description = "# territory_feats\n\nA library to compute weather and land features for territories.\n\n## Dependencies\n\nYou will need to have Poetry [installed](https://python-poetry.org/docs/#installation).\n\nThen, to install all the dependencies, run `poetry install`.\n\n## Testing, linting, formatting...\n\nRun the tests with `poetry run pytest`.\n\nFor running the linter with autofixing: `poetry run ruff .`. (Ruff configuration is located in [pyproject.toml](pyproject.toml)).\n\nBlack can be used to format the files with `poetry run black .` (Black configuration is located in [pyproject.toml](pyproject.toml)).\n\n## Releases\n\nAs of today, GitHub Package Repository does not support Python packages. For that reason, we have created a [private PyPi repository](https://github.com/astaralabs/astaralabs-pypi-pkg-repo) on top of GitHub Pages using [this tool](https://github.com/pywharf/pywharf).\n\nThe index of the private PyPi is located [here](https://astaralabs.github.io/astaralabs-pypi-pkg-repo/).\n\nTo publish a package in that repository you will need a GitHub [PAT](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens) as credentials.\n\nFirst you have to start the [Pywharf](https://github.com/pywharf/pywharf) server:\n\n```bash\ndocker run --rm -v ./pywharf-root:/pywharf-root -p 8888:8888 pywharf/pywharf:0.2.3 server\ncurl -d $'config=[astaralabs-pypi-pkg-repo]\\ntype = \"github\"\\nowner = \"astaralabs\"\\nrepo = \"astaralabs-pypi-pkg-repo\"\\nbranch = \"main\"&admin_secret=[astaralabs-pypi-pkg-repo]\\ntype = \"github\"\\nraw = \"<YOUR-GITHUB-PAT>\"' -X POST http://localhost:8888/initialize/\n```\n\n```bash\n# config Poetry to use our own PyPi\npoetry config repositories.astaralabs-pypi http://localhost:8888/simple/\n\n# publish the package (this assumes you already built the package with `poetry build -f wheel`)\npoetry publish --repository astaralabs-pypi --username astaralabs-pypi-pkg-repo --password <YOUR-GITHUB-PAT> --skip-existing\n\n```\n\nAnd, to install the package in another Python project:\n\n```bash\n# set our PyPi repository as a source in Poetry\npoetry source add --secondary astaralabs-pypi https://astaralabs.github.io/astaralabs-pypi-pkg-repo/\n\n## If using poetry 1.5 or above\n# poetry source add --priority=explicit astaralabs-pypi https://astaralabs.github.io/astaralabs-pypi-pkg-repo/\n\npoetry add --source=astaralabs-pypi territory_feats\n```\n"
keywords = ""
classifiers = "Programming Language :: Python :: 3"
download_url = ""
comment = ""
md5_digest = "9a7da15fdc77deb9af0125493c7b2cb0"
sha256_digest = "b0076502734429b50f37d907127d05cd39f37c7fd14b3645cc6bf8776160ed7b"
blake2_256_digest = "05acdeb2f52bd24487113e6bf31685b8081287720157bcce21c113522e01a34e"
requires_dist = "pandas (>=2.0.3,<3.0.0)"
requires_python = ">=3.10,<3.13"
description_content_type = "text/markdown"
":action" = "file_upload"
protocol_version = "1"
distrib = "territory-feats"
sha256 = "b0076502734429b50f37d907127d05cd39f37c7fd14b3645cc6bf8776160ed7b"
[[pkgs]]
type = "github"
distrib = "territory-feats"
package = "territory_feats-0.1.0-py3-none-any"
ext = "whl"
sha256 = "6b076d51c79733045f271646a0294b4e0faab4fb5da3e1a428d0f5900c470362"
url = "https://api.github.com/repos/astaralabs/astaralabs-pypi-pkg-repo/releases/assets/115954232"

[pkgs.meta]
name = "territory-feats"
version = "0.1.0"
filetype = "bdist_wheel"
pyversion = "py3"
metadata_version = "2.1"
summary = ""
home_page = ""
author = "astara labs"
author_email = "dev@astaralabs.com"
maintainer = ""
maintainer_email = ""
license = ""
description = "# territory_feats\n\nA library to compute weather and land features for territories.\n\n## Dependencies\n\nYou will need to have Poetry [installed](https://python-poetry.org/docs/#installation).\n\nThen, to install all the dependencies, run `poetry install`.\n\n## Testing, linting, formatting...\n\nRun the tests with `poetry run pytest`.\n\nFor running the linter with autofixing: `poetry run ruff .`. (Ruff configuration is located in [pyproject.toml](pyproject.toml)).\n\nBlack can be used to format the files with `poetry run black .` (Black configuration is located in [pyproject.toml](pyproject.toml)).\n\n## Releases\n\nAs of today, GitHub Package Repository does not support Python packages. For that reason, we have created a [private PyPi repository](https://github.com/astaralabs/astaralabs-pypi-pkg-repo) on top of GitHub Pages using [this tool](https://github.com/pywharf/pywharf).\n\nThe index of the private PyPi is located [here](https://astaralabs.github.io/astaralabs-pypi-pkg-repo/).\n\nTo publish a package in that repository you will need a GitHub [PAT](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens) as credentials.\n\nFirst you have to start the [Pywharf](https://github.com/pywharf/pywharf) server:\n\n```bash\ndocker run --rm -v ./pywharf-root:/pywharf-root -p 8888:8888 pywharf/pywharf:0.2.3 server\ncurl -d $'config=[astaralabs-pypi-pkg-repo]\\ntype = \"github\"\\nowner = \"astaralabs\"\\nrepo = \"astaralabs-pypi-pkg-repo\"\\nbranch = \"main\"&admin_secret=[astaralabs-pypi-pkg-repo]\\ntype = \"github\"\\nraw = \"<YOUR-GITHUB-PAT>\"' -X POST http://localhost:8888/initialize/\n```\n\n```bash\n# config Poetry to use our own PyPi\npoetry config repositories.astaralabs-pypi http://localhost:8888/simple/\n\n# publish the package (this assumes you already built the package with `poetry build -f wheel`)\npoetry publish --repository astaralabs-pypi --username astaralabs-pypi-pkg-repo --password <YOUR-GITHUB-PAT> --skip-existing\n\n```\n\nAnd, to install the package in another Python project:\n\n```bash\n# set our PyPi repository as a source in Poetry\npoetry source add --secondary astaralabs-pypi https://astaralabs.github.io/astaralabs-pypi-pkg-repo/\n\n## If using poetry 1.5 or above\n# poetry source add --priority=explicit astaralabs-pypi https://astaralabs.github.io/astaralabs-pypi-pkg-repo/\n\npoetry add --source=astaralabs-pypi territory_feats\n```\n"
keywords = ""
classifiers = "Programming Language :: Python :: 3"
download_url = ""
comment = ""
md5_digest = "e83d4fb03566b6fa41f4bc485eb9ea17"
sha256_digest = "6b076d51c79733045f271646a0294b4e0faab4fb5da3e1a428d0f5900c470362"
blake2_256_digest = "8b41c8af01f7df3d66b88f7cf67227f3849958251ad016ed1b0c3a391eba73ed"
requires_dist = "pandas (>=2.0.3,<3.0.0)"
requires_python = ">=3.10,<3.13"
description_content_type = "text/markdown"
":action" = "file_upload"
protocol_version = "1"
distrib = "territory-feats"
sha256 = "6b076d51c79733045f271646a0294b4e0faab4fb5da3e1a428d0f5900c470362"
[[pkgs]]
type = "github"
distrib = "astaraplay"
package = "astaraplay-0.1.0-py3-none-any"
ext = "whl"
sha256 = "bb8c65e2ea454308681a61252de651d1e1f1f87fc72c638c496ebc920c164a92"
url = "https://api.github.com/repos/astaralabs/astaralabs-pypi-pkg-repo/releases/assets/115368415"

[pkgs.meta]
name = "astaraplay"
version = "0.1.0"
filetype = "bdist_wheel"
pyversion = "py3"
metadata_version = "2.1"
summary = ""
home_page = ""
author = "astara labs"
author_email = "dev@astaralabs.com"
maintainer = ""
maintainer_email = ""
license = ""
description = "# astaraplay\n\nPython library to interact with [astaraplay](https://astaraplay.com/) API.\nDocumentation of the API can be found [here](https://api.traffic-restrictions.astaralabs.com/docs).\n\n## Usage\n\nTo use this library, you will need credentials to access the astaraplay API. The API uses an HMAC authentication schema which is handled by this library, so you will only need to provide the `credential_id` and `secret` for your account.\n\nThen, just create an instance of the `Astaraplay` class and use it:\n\n```python\nfrom astaraplay import Astaraplay\n\nastaraplay = Astaraplay(credential_id=\"your-credential-id\", secret=\"your-secret\")\n\nresponse = astaraplay.request(method=\"GET\", url=\"/vehicle-info/1223GJP\")\n\nresponse.status_code\n# 200\nreponse.json\n# {'license_plate': '1223GJP', 'sticker': 'c', 'vehicle_type': 'vehiculo', 'license_registration_date': {'year': 2008, 'month': 11}, 'category': 'M1'}\n\n```\n\n## Development\n\n### Dependencies\n\nYou will need to have Poetry [installed](https://python-poetry.org/docs/#installation).\n\nThen, to install all the dependencies, run `poetry install`.\n\n### Testing\n\nThe tests interact with the actual astaraplay API, so you need credentials to call it.\nCreate a `.env` file from the provided `.env-template` one and fill it with the credentials (the credentials for lib testing are stored in the astaraplay DB).\n\nThe test suite will automatically load them as environment variables so you won't need to do any further steps.\n\nFinally, run the tests with `poetry run pytest`.\n\n### Linting, formatting...\n\nFor running the linter with autofixing: `poetry run ruff .`. (Ruff configuration is located in [pyproject.toml](pyproject.toml)).\n\nBlack can be used to format the files with `poetry run black .` (Black configuration is located in [pyproject.toml](pyproject.toml)).\n\n### Releases\n\nAs of today, GitHub Package Repository does not support Python packages. For that reason, we have created a [private PyPi repository]() on top of GitHub Pages using [this tool](https://github.com/pywharf/pywharf).\n\nThe index of the private PyPi is located [here](https://astaralabs.github.io/astaralabs-pypi-pkg-repo/).\n\nTo publish a package in that repository you will need a GitHub [PAT](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens) as credentials.\n\nFirst you have to start the [Pywharf](https://github.com/pywharf/pywharf) server:\n\n```bash\ndocker run --rm -v ./pywharf-root:/pywharf-root -p 8888:8888 pywharf/pywharf:0.2.3 server\ncurl -d $'config=[astaralabs-pypi-pkg-repo]\\ntype = \"github\"\\nowner = \"astaralabs\"\\nrepo = \"astaralabs-pypi-pkg-repo\"\\nbranch = \"main\"&admin_secret=[astaralabs-pypi-pkg-repo]\\ntype = \"github\"\\nraw = \"<YOUR-GITHUB-PAT>\"' -X POST http://localhost:8888/initialize/\n```\n\n```bash\n# config Poetry to use our own PyPi\npoetry config repositories.astaralabs-pypi http://localhost:8888/simple/\n\n# publish the package (this assumes you already built the package with `poetry build -f wheel`)\npoetry publish --repository astaralabs-pypi --username astaralabs-pypi-pkg-repo --password <YOUR-GITHUB-PAT> --skip-existing\n\n```\n\nAnd, to install the package in another Python project:\n\n```bash\n# set our PyPi repository as a source in Poetry\npoetry source add --secondary astaralabs-pypi https://astaralabs.github.io/astaralabs-pypi-pkg-repo/\n\n## If using poetry 1.5 or above\n# poetry source add --priority=explicit astaralabs-pypi https://astaralabs.github.io/astaralabs-pypi-pkg-repo/\n\npoetry add --source=astaralabs-pypi astaraplay\n```\n"
keywords = ""
classifiers = "Programming Language :: Python :: 3"
download_url = ""
comment = ""
md5_digest = "a8c08778b0ca2017de44f8131b83ae8a"
sha256_digest = "bb8c65e2ea454308681a61252de651d1e1f1f87fc72c638c496ebc920c164a92"
blake2_256_digest = "09be759f40f4c0aa008c5ea7f5b2e7c1e3871599cb7c9cea7ff7c1a8d4e05f44"
requires_dist = "httpx (>=0.24.1,<0.25.0)"
requires_python = ">=3.10,<4.0"
description_content_type = "text/markdown"
":action" = "file_upload"
protocol_version = "1"
distrib = "astaraplay"
sha256 = "bb8c65e2ea454308681a61252de651d1e1f1f87fc72c638c496ebc920c164a92"
[[pkgs]]
type = "github"
distrib = "python-lib-template"
package = "python_lib_template-0.1.0-py3-none-any"
ext = "whl"
sha256 = "1cff00579d02108a3eee58d8a59fb113fdd4bb6906945bc9ec1b40f67c1cda00"
url = "https://api.github.com/repos/astaralabs/astaralabs-pypi-pkg-repo/releases/assets/114522460"

[pkgs.meta]
name = "python-lib-template"
version = "0.1.0"
filetype = "bdist_wheel"
pyversion = "py3"
metadata_version = "2.1"
summary = ""
home_page = ""
author = "alejandrodob"
author_email = "alejandro.dominguez.b@astara.com"
maintainer = ""
maintainer_email = ""
license = ""
description = "# python-lib-template\n\nA template for Python libraries\n\n## Included tools\n\n- [Poetry](https://python-poetry.org/) for handling the project dependencies, building and (in the future) publishing the package.\n- [MyPy](https://www.mypy-lang.org/) for type checking.\n- [Ruff](https://beta.ruff.rs/docs/) for linting (configured to auto fix whenever possible).\n- [Black](https://black.readthedocs.io/en/stable/index.html) for autoformatting.\n- [Pytest](https://pytest.org/) for testing.\n\n## Usage\n\nAfter using the template for a new library repository, rename the package folder `python_lib_template` to your library name and do a global search of the string \"python_lib_template\" and replace it for your library name too.\n\n## Dependencies\n\nYou will need to have Poetry [installed](https://python-poetry.org/docs/#installation).\n\nThen, to install all the dependencies, run `poetry install`.\n\n## Testing, linting, formatting...\n\nRun the tests with `poetry run pytest`.\n\nFor running the linter with autofixing: `poetry run ruff .`. (Ruff configuration is located in [pyproject.toml](pyproject.toml)).\n\nBlack can be used to format the files with `poetry run black .` (Black configuration is located in [pyproject.toml](pyproject.toml)).\n\n## Releases\n\nAs of today, GitHub Package Repository does not support Python packages. For that reason, we will install the package directly from GitHub, as explained [here](https://pip.pypa.io/en/stable/topics/vcs-support/).\n"
keywords = ""
classifiers = "Programming Language :: Python :: 3"
download_url = ""
comment = ""
md5_digest = "a98271448ff8935e1f18423c4ac945d8"
sha256_digest = "1cff00579d02108a3eee58d8a59fb113fdd4bb6906945bc9ec1b40f67c1cda00"
blake2_256_digest = "d1206ec15f63e8e37a7e3d142c5da31cd8844c8e74dcf4975e9809cf6b6e5f03"
requires_python = ">=3.10,<4.0"
description_content_type = "text/markdown"
":action" = "file_upload"
protocol_version = "1"
distrib = "python-lib-template"
sha256 = "1cff00579d02108a3eee58d8a59fb113fdd4bb6906945bc9ec1b40f67c1cda00"
